{% set version = "4.8.0" %}
{% set build = 1 %}

# recipe-lint fails if mpi is undefined
{% set mpi = mpi or 'nompi' %}
{% if mpi == "nompi" %}
# prioritize nompi via build number
{% set build = build + 100 %}
{% endif %}

package:
  name: libnetcdf
  version: {{ version }}

source:
  url: https://github.com/Unidata/netcdf-c/archive/v{{ version }}.tar.gz
  sha256: aff58f02b1c3e91dc68f989746f652fe51ff39e6270764e484920cb8db5ad092
  patches:
    - patches/0004-Prefer-getenv-TOPSRCDIR-over-STRINGIFY-TOPSRCDIR.patch
    - patches/0006-Fix-tests-for-Windows-VS2008-define-__func__-as-__FU.patch
    - patches/0008-Finish-the-missing-code-to-handle-VS-in-test_common..patch
    - patches/0009-topsrcdir.patch
    - patches/prevent_MS_runtime_libs_being_installed_again.patch  # [win]
    - patches/strdup.patch
    - patches/do_not_use_16_processes_in_tests.patch  # [ppc64le]
    # Fixes from upstream, remove with 4.8.1
    - patches/cmake_fixes.patch

build:
  number: {{ build }}
  skip: true  # [win and vc<14]
  {% if mpi != "nompi" %}
  {% set mpi_prefix = "mpi_" + mpi %}
  {% else %}
  {% set mpi_prefix = "nompi" %}
  {% endif %}
  # add build string so packages can depend on
  # mpi or nompi variants
  # dependencies:
  # `PKG_NAME * mpi_mpich_*` for mpich
  # `PKG_NAME * mpi_*` for any mpi
  # `PKG_NAME * nompi_*` for no mpi
  string: {{ mpi_prefix }}_h{{ PKG_HASH }}_{{ build }}

  # mpi builds require the right mpi
  # non-mpi builds *do not* appear to require non-mpi builds
  # at least not always

  {% if mpi != 'nompi' %}
  {% set build_pin = mpi_prefix + '_*' %}
  {% else %}
  {% set build_pin = '' %}
  {% endif %}

  run_exports:
    #   https://abi-laboratory.pro/tracker/timeline/netcdf/
    - {{ pin_subpackage('libnetcdf', max_pin='x.x.x.x') }} {{ build_pin }}

requirements:
  build:
    - cmake
    - make  # [not win]
    - pkg-config  # [not win]
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
  host:
    - {{ mpi }}  # [mpi != 'nompi']
    - msinttypes  # [win and vc<14]
    - bzip2
    - curl
    - zlib
    # hdf4 doesn't seem to be well tested for Little Endian Arches
    # I don't think it is wise to block on that in 2020
    - hdf4  # [not aarch64]
    # without this repeat reference, conda-smithy doesn't pin correctly
    - hdf5
    - hdf5 * {{ mpi_prefix }}_*
    - jpeg
    - libzip
  run:
    - {{ mpi }}  # [mpi != 'nompi']
    - bzip2
    - curl
    - zlib
    - hdf4  # [not aarch64]
    - hdf5 * {{ mpi_prefix }}_*
    - jpeg
    - libzip
    # Curl should be pulling this... Investigate it later.
    - libssh2  # [win]

test:
  commands:
    - test -f ${PREFIX}/lib/libnetcdf.a  # [not win]
    - test -f ${PREFIX}/lib/libnetcdf${SHLIB_EXT}  # [not win]
    - nc-config --all  # [not win]

about:
  home: http://www.unidata.ucar.edu/software/netcdf/
  license: MIT
  license_file: COPYRIGHT
  summary: Libraries and data formats that support array-oriented scientific data

extra:
  recipe-maintainers:
    - groutr
    - kmuehlbauer
    - ocefpaf
    - mingwandroid
    - msarahan
    - xylar
