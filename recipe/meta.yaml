{% set version = "4.9.3" %}
{% set build = 3 %}

# recipe-lint fails if mpi is undefined
{% set mpi = mpi or 'nompi' %}
{% if mpi == "nompi" %}
# prioritize nompi via build number
{% set build = build + 100 %}
{% endif %}

package:
  name: libnetcdf
  version: {{ version }}

source:
  url: https://github.com/Unidata/netcdf-c/archive/refs/tags/v{{ version }}.tar.gz
  sha256: 990f46d49525d6ab5dc4249f8684c6deeaf54de6fec63a187e9fb382cc0ffdff
  patches:
    - patches/0004-Prefer-getenv-TOPSRCDIR-over-STRINGIFY-TOPSRCDIR.patch
    - patches/0009-topsrcdir.patch
    - patches/do_not_use_16_processes_in_tests.patch  # [ppc64le]
    - patches/fix-s3-support.patch

build:
  number: {{ build }}
  skip: true  # [win and vc<14]
  {% if mpi != "nompi" %}
  {% set mpi_prefix = "mpi_" + mpi %}
  {% else %}
  {% set mpi_prefix = "nompi" %}
  {% endif %}
  # add build string so packages can depend on
  # mpi or nompi variants
  # dependencies:
  # `PKG_NAME * mpi_mpich_*` for mpich
  # `PKG_NAME * mpi_*` for any mpi
  # `PKG_NAME * nompi_*` for no mpi
  string: {{ mpi_prefix }}_h{{ PKG_HASH }}_{{ build }}

  # mpi builds require the right mpi
  # non-mpi builds *do not* appear to require non-mpi builds
  # at least not always

  {% if mpi != 'nompi' %}
  {% set build_pin = mpi_prefix + '_*' %}
  {% else %}
  {% set build_pin = '' %}
  {% endif %}

  run_exports:
    #   https://abi-laboratory.pro/tracker/timeline/netcdf/
    - {{ pin_subpackage('libnetcdf', max_pin='x.x.x') }} {{ build_pin }}

requirements:
  build:
    # Until we get Windows builds fixed, see
    # https://github.com/conda-forge/libnetcdf-feedstock/pull/199#issuecomment-2820860279
    - cmake <4.0
    - make  # [not win]
    - pkg-config  # [not win]
    - gnuconfig  # [unix]
    - {{ compiler('c') }}
    - {{ stdlib('c') }}
    - {{ compiler('cxx') }}
    - {{ mpi }}  # [mpi == 'openmpi' and build_platform != target_platform]
    - unzip  # [not win]
    - m2-unzip  # [win]
    - m4  # [not win]
    - m2-m4  # [win]
    - wget  # [not win]
    - diffutils  # [linux]
  host:
    - {{ mpi }}  # [mpi != 'nompi']
    - blosc
    - bzip2
    - hdf4
    # without this repeat reference, conda-smithy doesn't pin correctly
    - hdf5
    - hdf5 * {{ mpi_prefix }}_*
    - libaec
    - libcurl
    - libpnetcdf  # [mpi != 'nompi']
    - libxml2-devel
    - libzip
    # Openssl provides libcrypto which is needed via libcurl, but doesn't get
    # to the run reqs through run_exports because it is twice removed
    - openssl  # [unix]
    - zlib
    - zstd
    # Silence "getfattr: not found" warnings originating from upstream DAOS
    # detection that shells out to `getfattr` when xattr headers are not
    # available at build time. Ensure `getfattr` is present at runtime on
    # Linux and that the version used at build time is from conda-forge, not
    # the one in /usr/bin.
    # See:
    # - https://github.com/conda-forge/libnetcdf-feedstock/issues/211
    - attr  # [linux]
  run:
    # In principle, zlib should *not* be a run requirement since only libz.so.1
    # is needed which is provided by libzlib, which in turn gets added to the
    # run requirements as a run_export from zlib in the host requirements.
    # However, the Cmake export target requires libz.so (likely a bug), which is
    # provided by zlib, hence the run requirement here to make the export target
    # usable. For more details, see
    # https://github.com/conda-forge/libnetcdf-feedstock/issues/173
    # https://github.com/Unidata/netcdf-c/issues/2713
    - zlib

test:
  commands:
    - test ! -f ${PREFIX}/lib/libnetcdf.a          # [not win]
    - test -f ${PREFIX}/lib/libnetcdf${SHLIB_EXT}  # [not win]
    - nc-config --all  # [not win]

about:
  home: http://www.unidata.ucar.edu/software/netcdf/
  license: MIT
  license_file: COPYRIGHT
  summary: Libraries and data formats that support array-oriented scientific data
  dev_url: https://github.com/Unidata/netcdf-c

extra:
  recipe-maintainers:
    - WardF
    - groutr
    - kmuehlbauer
    - ocefpaf
    - mingwandroid
    - msarahan
    - xylar
    - dopplershift
    - zklaus
